const t=(t,e=0)=>{let n=e,l=null;for(;n<t.length;n++){const r=t.slice(e,n+1).match(/^(\s+)$/);if(!r)break;l=r}return l?{type:"space",value:l[1],idx:n}:null},e=(t,e=0)=>{let n=e;const l=i(t,n);return l&&"null"==l.value?(n=l.idx,{type:"null",value:null,idx:n}):null},n=(t,e=0)=>{let n=e;const l=i(t,n);return l&&["true","false"].includes(l.value)?(n=l.idx,{type:"boolean",value:"true"==l.value,idx:n}):null},l=(t,e=0)=>{let n=e,l="",r="+";for("-"==t.charAt(n)&&(r="-",n++);n<t.length;n++){const e=t.charAt(n);if(!(/\d/.test(e)||l&&!l.includes(".")&&"."==e))break;l+=e}return!l||l.endsWith(".")?null:{type:"number",value:Number(r+l),idx:n}},r=(t,e=0)=>{let n=e;if(!t.startsWith('"'))return null;n++;let l="",r=t[n],i=!1;for(;n<t.length;n++,r=t[n])if(i||!['"',"\\"].includes(t[n]))l+=(i?"\\":"")+r,i=!1;else if("\\"==r)i=!0;else if(!i&&'"'==r){n++;break}return i||'"'!=r?null:{type:"string",value:l,idx:n}},i=(t,e=0)=>{let n=e,l=null;for(;n<t.length;n++){const r=t.slice(e,n+1).match(/^([a-zA-Z_][a-zA-Z0-9_]*)$/);if(!r)break;l=r}return l?{type:"word",value:l[1],idx:n}:null},u=(t,e=0)=>{let n=e;const l=i(t,n),r=[];if(!l)return null;n=l.idx;let u={value:l.value,isArray:!1};for(r.push(u);"[]"==t.slice(n,n+2)&&(n+=2,u.isArray=!0),"."==t[n];){n++;const e=i(t,n);if(!e)return null;n=e.idx,r.push(u={value:e.value,isArray:!1})}return{type:"name",idx:n,words:r}},o=(e,n=0)=>{let l=n;const r=[];if("["!=e[l])return null;l++;const i=t(e,l);i&&(l=i.idx);const u=x(e,l);for(null!==u&&(l=u.idx,r.push(u));null!==u;){const n=t(e,l);if(n&&(l=n.idx),","!=e[l])break;l++;const i=t(e,l);i&&(l=i.idx);const u=x(e,l);if(null===u)break;l=u.idx,r.push(u)}const o=t(e,l);return o&&(l=o.idx),"]"!=e[l]?null:(l++,{type:"list",value:r,idx:l})},s=(e,n=0)=>{let l=n;if("("!=e[l])return null;l++;const r=t(e,l);r&&(l=r.idx);const i=y(e,l);if(!i)return null;l=i.idx;const u=t(e,l);return u&&(l=u.idx),")"!=e[l]?null:(l++,{type:"group",value:i,idx:l})},x=(t,i=0)=>{let x=i;const d=[s,o,e,n,l,r,u];let a=null;for(const e of d)if(a=e(t,x),a)break;return a?(x=a.idx,{type:"term",value:a,idx:x}):null},d=(t,e=0)=>{const n=i(t,e);if(!n)return null;const l=["not"].find((t=>t==n.value));return l?{type:"prefix",idx:n.idx,value:l}:null},a=(t,e=0)=>{const n=i(t,e);if(!n)return null;const l=["lte","gte","lt","gt","eq","in","notin","noteq"].find((t=>t==n.value));return l?{type:"infix0",idx:n.idx,value:l}:null},f=(t,e=0)=>{const n=i(t,e);if(!n)return null;const l=["and"].find((t=>t==n.value));return l?{type:"infix1",idx:n.idx,value:l}:null},c=(t,e=0)=>{const n=i(t,e);if(!n)return null;const l=["or"].find((t=>t==n.value));return l?{type:"infix2",idx:n.idx,value:l}:null},p=(e,n=0)=>{let l=n;const r=d(e,l);if(r){l=r.idx;const n=t(e,l);n&&(l=n.idx)}const i=x(e,l);if(!i)return null;l=i.idx;let u=r?{type:"prefix-operation",operator:r,operand:i,idx:l}:i;for(;;){const n=t(e,l);n&&(l=n.idx);const r=a(e,l);if(!r)break;l=r.idx;const i=t(e,l);i&&(l=i.idx);const o=d(e,l);if(o){l=o.idx;const n=t(e,l);n&&(l=n.idx)}const s=x(e,l);if(!s)return null;l=s.idx;u={type:"infix0-operation",operator:r,idx:l,left:u,right:o?{type:"prefix-operation",operator:o,operand:s,idx:l}:s}}return u},v=(e,n=0)=>{let l=n;const r=p(e,l);if(!r)return null;l=r.idx;let i=r;for(;;){const n=t(e,l);n&&(l=n.idx);const r=f(e,l);if(!r)break;l=r.idx;const u=t(e,l);u&&(l=u.idx);const o=p(e,l);if(!o)return null;l=o.idx,i={type:"infix1-operation",operator:r,idx:l,left:i,right:o}}return i},y=(e,n=0)=>{let l=n;const r=v(e,l);if(!r)return null;l=r.idx;let i=r;for(;;){const n=t(e,l);n&&(l=n.idx);const r=c(e,l);if(!r)break;l=r.idx;const u=t(e,l);u&&(l=u.idx);const o=v(e,l);if(!o)return null;l=o.idx,i={type:"infix2-operation",operator:r,idx:l,left:i,right:o}}return i},h={space:t,null:e,boolean:n,number:l,string:r,word:i,name:u,term:x,list:o,group:s,prefix:d,infix0:a,infix1:f,infix2:c,expr0:p,expr1:v,expr2:y};export{h as parse};
//# sourceMappingURL=bundle-index.js.map
