const e=(e,t=0)=>{let n=t,l=null;for(;n<e.length;n++){const i=e.slice(t,n+1).match(/^(\s+)$/);if(!i)break;l=i}return l?{type:"space",value:l[1],idx:n}:null},t=(e,t=0)=>{let n=t;const l=r(e,n);return l&&"null"==l.value?(n=l.idx,{type:"null",value:null,idx:n}):null},n=(e,t=0)=>{let n=t;const l=r(e,n);return l&&["true","false"].includes(l.value)?(n=l.idx,{type:"boolean",value:"true"==l.value,idx:n}):null},l=(e,t=0)=>{let n=t,l="",i="+";for("-"==e.charAt(n)&&(i="-",n++);n<e.length;n++){const t=e.charAt(n);if(!(/\d/.test(t)||l&&!l.includes(".")&&"."==t))break;l+=t}return!l||l.endsWith(".")?null:{type:"number",value:Number(i+l),idx:n}},i=(e,t=0)=>{let n=t;if(!e.startsWith('"'))return null;n++;let l="",i=e[n],r=!1;for(;n<e.length;n++,i=e[n])if(r||!['"',"\\"].includes(e[n]))l+=(r?"\\":"")+i,r=!1;else if("\\"==i)r=!0;else if(!r&&'"'==i){n++;break}return r||'"'!=i?null:{type:"string",value:l,idx:n}},r=(e,t=0)=>{let n=t,l=null;for(;n<e.length;n++){const i=e.slice(t,n+1).match(/^([a-zA-Z_][a-zA-Z0-9_]*)$/);if(!i)break;l=i}return l?{type:"word",value:l[1],idx:n}:null},u=(e,t=0)=>{let n=t;const l=r(e,n),i=[];if(!l)return null;n=l.idx;let u={value:l.value,isArray:!1};for(i.push(u);"[]"==e.slice(n,n+2)&&(n+=2,u.isArray=!0),"."==e[n];){n++;const t=r(e,n);if(!t)return null;n=t.idx,i.push(u={value:t.value,isArray:!1})}return{type:"name",idx:n,words:i}},o=(t,n=0)=>{let l=n;const i=[];if("["!=t[l])return null;l++;const r=e(t,l);r&&(l=r.idx);const u=x(t,l);for(null!==u&&(l=u.idx,i.push(u));null!==u;){const n=e(t,l);if(n&&(l=n.idx),","!=t[l])break;l++;const r=e(t,l);r&&(l=r.idx);const u=x(t,l);if(null===u)break;l=u.idx,i.push(u)}const o=e(t,l);return o&&(l=o.idx),"]"!=t[l]?null:(l++,{type:"list",value:i,idx:l})},s=(t,n=0)=>{let l=n;if("("!=t[l])return null;l++;const i=e(t,l);i&&(l=i.idx);const r=y(t,l);if(!r)return null;l=r.idx;const u=e(t,l);return u&&(l=u.idx),")"!=t[l]?null:(l++,{type:"group",value:r,idx:l})},x=(e,r=0)=>{let x=r;const d=[s,o,t,n,l,i,u];let a=null;for(const t of d)if(a=t(e,x),a)break;return a?(x=a.idx,{type:"term",value:a,idx:x}):null},d=(e,t=0)=>{const n=r(e,t);if(!n)return null;const l=["not"].find((e=>e==n.value));return l?{type:"prefix",idx:n.idx,value:l}:null},a=(e,t=0)=>{const n=r(e,t);if(!n)return null;const l=["lte","gte","lt","gt","eq","in","notin","noteq","has","begins","ends"].find((e=>e==n.value));return l?{type:"infix0",idx:n.idx,value:l}:null},f=(e,t=0)=>{const n=r(e,t);if(!n)return null;const l=["and"].find((e=>e==n.value));return l?{type:"infix1",idx:n.idx,value:l}:null},c=(e,t=0)=>{const n=r(e,t);if(!n)return null;const l=["or"].find((e=>e==n.value));return l?{type:"infix2",idx:n.idx,value:l}:null},p=(t,n=0)=>{let l=n;const i=d(t,l);if(i){l=i.idx;const n=e(t,l);n&&(l=n.idx)}const r=x(t,l);if(!r)return null;l=r.idx;let u=i?{type:"prefix-operation",operator:i,operand:r,idx:l}:r;for(;;){const n=e(t,l);n&&(l=n.idx);const i=a(t,l);if(!i)break;l=i.idx;const r=e(t,l);r&&(l=r.idx);const o=d(t,l);if(o){l=o.idx;const n=e(t,l);n&&(l=n.idx)}const s=x(t,l);if(!s)return null;l=s.idx;u={type:"infix0-operation",operator:i,idx:l,left:u,right:o?{type:"prefix-operation",operator:o,operand:s,idx:l}:s}}return u},v=(t,n=0)=>{let l=n;const i=p(t,l);if(!i)return null;l=i.idx;let r=i;for(;;){const n=e(t,l);n&&(l=n.idx);const i=f(t,l);if(!i)break;l=i.idx;const u=e(t,l);u&&(l=u.idx);const o=p(t,l);if(!o)return null;l=o.idx,r={type:"infix1-operation",operator:i,idx:l,left:r,right:o}}return r},y=(t,n=0)=>{let l=n;const i=v(t,l);if(!i)return null;l=i.idx;let r=i;for(;;){const n=e(t,l);n&&(l=n.idx);const i=c(t,l);if(!i)break;l=i.idx;const u=e(t,l);u&&(l=u.idx);const o=v(t,l);if(!o)return null;l=o.idx,r={type:"infix2-operation",operator:i,idx:l,left:r,right:o}}return r},h={space:e,null:t,boolean:n,number:l,string:i,word:r,name:u,term:x,list:o,group:s,prefix:d,infix0:a,infix1:f,infix2:c,expr0:p,expr1:v,expr2:y};export{h as parse};
//# sourceMappingURL=bundle-index.js.map
